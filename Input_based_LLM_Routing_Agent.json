{
  "name": "Input-based-LLM-Routing-Agent",
  "nodes": [
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"userQuery\": \"user query here\",\n  \"model\": \"selected model here\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        120,
        120
      ],
      "id": "6bd9c288-b1cb-4b90-9e8a-e9bb5159538d",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -240,
        120
      ],
      "id": "375292ca-83f3-4376-9291-1170da7bf9f3",
      "name": "gpt-4o-mini",
      "credentials": {
        "openRouterApi": {
          "id": "7CHIuiWfZkBO8U44",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "model": "={{ $json.output.model }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        300,
        120
      ],
      "id": "1838ad48-2e48-47e5-96cd-ee87b063c128",
      "name": "Dynamic Model",
      "credentials": {
        "openRouterApi": {
          "id": "7CHIuiWfZkBO8U44",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a routing agent.\n\nYour job is to take in user queries and decide which model is best fit for each use case the user may have. You will have 3 models you can select from for the user query:\n\n1. \"perplexity/sonar\"\n\n2. \"openai/o3-mini-high\"\n\n3. \"anthropic/claude-3.5-sonnet\"\n\nEach model has it's strengths and can give better answers for specific user questions and commands. Let's dive into the strengths of each model so you can decide which one is best for the user question:\n\nModel: perplexity/sonar\nStrengths: \n- Built-in web search.\n- Features citations and the ability to customize sources.\n- Can search the web for live data.\n\nModel: openai/o3-mini-high\nStrengths: \n- Cost-efficient language model optimized for advanced reasoning tasks.\n- Excels in science and mathematics.\n- This model is best for careful, well thought responses are needing regarding problems with multiple variables or connections.\n\nModel: anthropic/claude-3.5-sonnet\nStrengths: \n- Coding: Scores ~49% on SWE-Bench Verified, higher than the last best score, and without any fancy prompt scaffolding\n- Data science: Augments human data science expertise; navigates unstructured data while using multiple tools for insights\n- Visual processing: excelling at interpreting charts, graphs, and images, accurately transcribing text to derive insights beyond just the text alone\n- Agentic tasks: exceptional tool use, making it great at agentic tasks (i.e. complex, multi-step problem solving tasks that require engaging with other systems)\n\n\nYou are to pass the user query and decide on a model using structured JSON object format like this:\n\nJSON Object Structure:\n\n{\n  \"userQuery\": \"user query here\",\n  \"model\": \"selected model here\"\n}\n\nExample 1:\n{\n  \"userQuery\": \"What are the top 5 trends in AI for 2025, and can you link to reliable sources?\",\n  \"model\": \"perplexity/sonar\"\n}\n\nExample 2:\n{\n  \"userQuery\": \"Can you solve this physics problem involving gravitational force and provide step-by-step reasoning?\",\n  \"model\": \"openai/o3-mini-high\"\n}\n\nExample 3:\n{\n  \"userQuery\": \"Write a Streamlit app that visualizes real-time stock prices and predicts short-term trends.\",\n  \"model\": \"anthropic/claude-3.5-sonnet\"\n}\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -120,
        -100
      ],
      "id": "11d6a802-b67d-467f-a682-4cd2d02121fc",
      "name": "Routing Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output.userQuery }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        360,
        -100
      ],
      "id": "7dfd2e7c-76d4-4eb4-aac4-56cecc38581e",
      "name": "Agent Output"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -340,
        -100
      ],
      "id": "40075b86-cb04-4856-ae2d-695235ec80f8",
      "name": "Chat Input",
      "webhookId": "a23f9413-473b-4a51-9e22-a243d83f592e"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Chat Input').item.json.sessionId }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        480,
        120
      ],
      "id": "46d01024-e1ae-43e5-9cb2-7891826898ed",
      "name": "Memory 2"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -60,
        120
      ],
      "id": "596d25b8-8154-4811-8380-b67cbcd4704f",
      "name": "Memory 1"
    }
  ],
  "pinData": {},
  "connections": {
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Routing Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Routing Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Dynamic Model": {
      "ai_languageModel": [
        [
          {
            "node": "Agent Output",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Routing Agent": {
      "main": [
        [
          {
            "node": "Agent Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Input": {
      "main": [
        [
          {
            "node": "Routing Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Memory 2": {
      "ai_memory": [
        [
          {
            "node": "Agent Output",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Memory 1": {
      "ai_memory": [
        [
          {
            "node": "Routing Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "ba586597-305e-42fa-a09d-1a965fa57edf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6b4faf02b4f45ec01fb36e33cab7810ee13d2d48d99b01029949d246f51b2810"
  },
  "id": "Yxwh9taRC5YFwPJI",
  "tags": [
    {
      "createdAt": "2025-06-03T07:17:16.847Z",
      "updatedAt": "2025-06-03T07:17:16.847Z",
      "id": "JRfdTDwa8o9lFUeU",
      "name": "AI Agent"
    }
  ]
}